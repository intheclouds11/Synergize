//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Packages/HurricaneVR/Framework/Scripts/ControllerInput/InputSystem/HVRInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @HVRInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @HVRInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""HVRInputActions"",
    ""maps"": [
        {
            ""name"": ""LeftHand"",
            ""id"": ""272f6d14-89ba-496f-b7ff-215263d3219f"",
            ""actions"": [
                {
                    ""name"": ""TriggerPress"",
                    ""type"": ""Button"",
                    ""id"": ""578a0cd6-f388-4fa3-92f3-c09338bdf6fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""5c8cf249-a01c-4b19-8eea-152b951f6a5a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""204073bf-582e-48f4-a392-6eaf1e637387"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""48a4f982-c501-412c-a715-b9201cb08c37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""e91ffee7-ec69-40fb-8663-4ebf07153bfe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""0e72db49-759e-4b56-853f-a5e3b9bf0e04"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Primary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""d36e4b01-3a25-4dc6-8094-179ddb10bd71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""416d6df4-7244-4b5c-986c-11881e0eac57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""344eec1c-660f-4d4a-8b5b-1a2362d9b2de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""927e0cfe-b2ed-4a00-8048-3cd36742a8e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisForce"",
                    ""type"": ""Button"",
                    ""id"": ""96430a39-75fe-4790-bd89-84cb3df4482e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""28bf5850-459e-4b46-af7a-24a5a64fdf99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""26a9b492-9ead-4e86-9484-d69dc44c512e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripPress"",
                    ""type"": ""Button"",
                    ""id"": ""e91897d7-06ef-41b9-aaa2-b14ae7540fca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripForce"",
                    ""type"": ""Value"",
                    ""id"": ""36b1a84c-21c8-4826-8ecc-bfd5fea14c7b"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""1414e4ef-05d7-40b1-b759-aa2c2c9cee56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""83a06fa6-147b-41c5-9841-1fd2bbb33c31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerTouch"",
                    ""type"": ""Button"",
                    ""id"": ""a2c3edea-193d-4944-91ba-2e2630b711d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""4ac0bda8-e0c1-4d35-9125-d1a86167ce4c"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""5c60ec11-4989-4ca5-8c81-a31ee8afad7f"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptics"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c2bd3cd6-8deb-46c4-95a9-93eaa08c44b3"",
                    ""expectedControlType"": ""Haptic"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b9c19907-3b5c-4207-ad18-5a86655f688c"",
                    ""path"": ""<XRController>{LeftHand}/{triggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec353a5a-6a7a-4ee6-a33e-d12a8c0b705a"",
                    ""path"": ""<XRController>{LeftHand}/{trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a98fe1d-5477-4473-9ed1-05d2decb2c15"",
                    ""path"": ""<XRController>{LeftHand}/{primaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dfde460-9bef-4bd9-943d-170adc171ff8"",
                    ""path"": ""<XRController>{LeftHand}/{primaryTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9603ae96-fef3-432c-88a0-282232c1368d"",
                    ""path"": ""<XRController>{LeftHand}/{menu}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f261d50-7cf3-4d07-9fe5-f57d21751d4d"",
                    ""path"": ""<ViveController>{LeftHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54ac7ab0-8ca9-4cbc-a6d1-da5ee0b055cb"",
                    ""path"": ""<XRController>{LeftHand}/{primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85d45408-e658-4df8-ab60-de9273ceb30c"",
                    ""path"": ""<XRController>{LeftHand}/{primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a07f0bb7-9d68-4288-b0f1-78c62a995fa4"",
                    ""path"": ""<XRController>{LeftHand}/{primary2DAxisTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb03eabc-18e2-447a-a308-dc36cf9ec38e"",
                    ""path"": ""<XRController>{LeftHand}/{secondary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8e6dbb2-9e0e-453c-aaa5-5967f2fab6f6"",
                    ""path"": ""<ViveController>{LeftHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fadeed58-e6fc-4cc4-9fdc-5cfae044209c"",
                    ""path"": ""<XRController>{LeftHand}/{secondary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""366ac51f-3093-4ead-8dba-662fe2cbb81f"",
                    ""path"": ""<XRController>{LeftHand}/trackpadPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b74594f8-e87a-43ae-82ec-47612e07bfb3"",
                    ""path"": ""<XRController>{LeftHand}/{secondary2DAxisTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72eeb177-b210-4a4a-8a29-1db62419451d"",
                    ""path"": ""<ViveController>{LeftHand}/trackpadTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Secondary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26245d74-dc1a-4fce-a7e1-1d4688ef73b1"",
                    ""path"": ""<XRController>{LeftHand}/{grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42d65f44-8e82-44cd-b3c4-a5d6cea301c6"",
                    ""path"": ""<OculusTouchController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1458d4ea-a188-4ad0-9215-0e48997da150"",
                    ""path"": ""<XRController>{LeftHand}/{gripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c3f7ce0-b62f-44e2-a1e1-11f143de72d7"",
                    ""path"": ""<XRController>{LeftHand}/{secondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cfe2a5d-28c1-425b-998e-810968e19292"",
                    ""path"": ""<XRController>{LeftHand}/{secondaryTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8114404-e28d-455e-b8a6-393da81c4ace"",
                    ""path"": ""<XRController>{LeftHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfa3aaa8-78b6-48e7-8002-beb9903fe613"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""ControllerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61b858cd-a94a-42be-b4ea-566b0502fec7"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""ControllerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e719282e-3d03-4d88-aa13-873641db842a"",
                    ""path"": ""<XRController>{LeftHand}/haptic"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Haptics"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""229a9244-ace6-4ebf-b601-e818c9cb4af3"",
                    ""path"": ""<ValveIndexController>{LeftHand}/trackpadForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87119f34-9383-442f-831d-6ab78f0122d3"",
                    ""path"": ""<ValveIndexController>{LeftHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8d6e334-0d1c-4777-a070-b114001ca724"",
                    ""path"": ""<ValveIndexController>{LeftHand}/trackpadForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee571d98-fc48-45e6-81b5-1c2bf58243b8"",
                    ""path"": ""<ValveIndexController>{LeftHand}/gripForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RightHand"",
            ""id"": ""fd87d126-5dc2-445c-82df-1abc6c9f8076"",
            ""actions"": [
                {
                    ""name"": ""TriggerPress"",
                    ""type"": ""Button"",
                    ""id"": ""bc163c5e-01a5-48ae-83b3-87e68f24f888"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""2fccaf18-d578-4ac9-9d0b-08db4a2e1dc7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""b87d0657-0e2f-41f9-92ee-6c7f0b0fa4f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Value"",
                    ""id"": ""7612bd2d-ec25-4cb7-8eb2-3a4b7704b025"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""561d782c-0eab-4674-80c5-7a8eb70cf246"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""273526bd-c3ba-4f35-ac7a-840c1ed6ab6d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Primary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""1c531107-9819-4f1f-a0e7-f11166016436"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""4de79a39-d622-4859-8f67-791365c0b780"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""5c85476c-f285-4a0a-8ed8-31466beae969"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""83227e26-e8f1-416e-a4a6-b70394fe5ea5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisForce"",
                    ""type"": ""Button"",
                    ""id"": ""53ff46d3-f520-47bf-86d2-806e68003320"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""05c6375e-e244-427a-8e61-cd465ffa62ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""f17f4516-fcdf-4891-9411-fee4983cd798"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripPress"",
                    ""type"": ""Button"",
                    ""id"": ""c20d8054-3d24-478f-8c51-5df4fec8c02a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripForce"",
                    ""type"": ""Value"",
                    ""id"": ""0432db25-4c80-4b6f-9b2d-8986bef39507"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""cba87b5e-c43b-4c38-b5dc-320d8fbb6136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""b20f3aa0-32c6-486d-a9b2-4d8baca0799f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerTouch"",
                    ""type"": ""Button"",
                    ""id"": ""19c8c1da-1f49-498c-8cb4-be13aab1abc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""07b14640-88dd-4da1-9a5c-c9039894b5cc"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""5d32a867-da55-4d98-9417-50f370471336"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptics"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7648f0bd-f36f-42c0-ade0-e15b6c3c62fe"",
                    ""expectedControlType"": ""Haptic"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e2185573-2cbd-4af0-9d4b-e03ff8b24d8f"",
                    ""path"": ""<XRController>{RightHand}/{triggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1bf452d-b059-4c1e-9c23-3be1c6be789e"",
                    ""path"": ""<XRController>{RightHand}/{trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d09e2fdd-08b3-42eb-86c8-5c3a8f4a03c5"",
                    ""path"": ""<XRController>{RightHand}/{primaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0657f0e8-4c3b-45d4-a00b-fda175a6684d"",
                    ""path"": ""<XRController>{RightHand}/{primaryTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3d9acf1-00ab-4616-951f-ef81d04d4d58"",
                    ""path"": ""<XRController>{RightHand}/{menu}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24b22f5b-4580-4c90-bdaa-47775335806a"",
                    ""path"": ""<ViveController>{RightHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""488857b2-965c-486c-b24e-e21628ad2a07"",
                    ""path"": ""<XRController>{RightHand}/{primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""feccb40e-4fa1-488f-a2f1-f44c2b80ae37"",
                    ""path"": ""<XRController>{RightHand}/{primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62761c89-0d6d-40f1-ae88-88fa58d7ff02"",
                    ""path"": ""<XRController>{RightHand}/{primary2DAxisTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40a1a86-f851-421e-86c4-aec93c7f1d9b"",
                    ""path"": ""<XRController>{RightHand}/{secondary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80b61ccb-82b6-4211-8ba9-e566090957b8"",
                    ""path"": ""<ViveController>{RightHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""391278c9-d02f-4c4f-8eeb-a857f4056a04"",
                    ""path"": ""<XRController>{RightHand}/{secondary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""011b1ed1-c56e-4c83-92bf-69090e5ea4f8"",
                    ""path"": ""<XRController>{RightHand}/trackpadPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8500211c-687a-441d-8317-90d953877830"",
                    ""path"": ""<ValveIndexController>{RightHand}/trackpadForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75e038e5-ec3b-417e-adf4-77881b52a1ff"",
                    ""path"": ""<XRController>{RightHand}/{secondary2DAxisTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c6386f8-5725-475b-9a82-7a50899c9059"",
                    ""path"": ""<ViveController>{RightHand}/trackpadTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Secondary2DAxisTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2c3d836-9c35-4647-a506-9e03f37d837f"",
                    ""path"": ""<XRController>{RightHand}/{grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f0b2479-b471-4775-8381-980b7957af20"",
                    ""path"": ""<XRController>{RightHand}/{gripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d0fd645-57e1-48c3-9393-701a1d96c9a2"",
                    ""path"": ""<XRController>{RightHand}/{secondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d034f83-a2ec-4c56-8a45-74443b36bb77"",
                    ""path"": ""<XRController>{RightHand}/{secondaryTouch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0c1b30a-a004-4a7b-8745-59a3b30a5008"",
                    ""path"": ""<XRController>{RightHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b8dde4f-389e-4c1c-b991-1dd5ab5a4191"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""ControllerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02bbe9e2-867c-4358-8ce9-7aff8fd0a0c1"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""ControllerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a59792b-c32d-4272-9a42-d8bcc47580da"",
                    ""path"": ""<XRController>{RightHand}/haptic"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Haptics"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9db0e545-2a2d-4777-b49a-8c6da6f48052"",
                    ""path"": ""<ValveIndexController>{RightHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b77cb6e9-aaa4-4a71-975a-550b308acba7"",
                    ""path"": ""<ValveIndexController>{RightHand}/trackpadForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3e2b04-d3b9-4366-b075-8478203458bc"",
                    ""path"": ""<ValveIndexController>{RightHand}/gripForce"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HMD"",
            ""id"": ""21d522e0-0295-43ef-b60a-3b355794717b"",
            ""actions"": [
                {
                    ""name"": ""hmdPosition"",
                    ""type"": ""Value"",
                    ""id"": ""36a3121d-efce-478c-867c-a8d354777b78"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""hmdRotation"",
                    ""type"": ""Value"",
                    ""id"": ""4e56a29d-b0cc-42fd-a087-552950afac95"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""08f50b61-5d92-42ac-bdb9-b898a4f0d4a7"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""hmdPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09769104-56ee-4fae-9065-07f530388e75"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""hmdRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""a725e4f4-1262-4d6f-8a52-b8ba368d4c82"",
            ""actions"": [
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""7d87f920-38ab-4a79-9716-27722a02c594"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""pointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3e8f3014-2311-4c71-9a89-6fffe0d7ae05"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""pointerRotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fff59030-bd11-46a7-96d3-35f8e50a86ca"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""78d62036-f819-477f-ba34-5041450a668f"",
                    ""path"": ""<XRController>/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR Usage"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc05f8fe-0a9a-49ec-84a5-01ccef667093"",
                    ""path"": ""<XRController>/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""047b05df-5df2-4fcf-81d7-a51f39906c16"",
                    ""path"": ""<XRController>/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pointerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LeftHandDesktop"",
            ""id"": ""0901219e-b68f-43e0-b5d2-c41e0d536226"",
            ""actions"": [
                {
                    ""name"": ""TriggerPress"",
                    ""type"": ""Button"",
                    ""id"": ""30e6f36f-d761-4a91-bc9a-b65ea6fd3bed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""1a0b1509-d841-4b18-a3fd-3cc4d6a77774"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""c8192003-d683-401d-a9dd-434fb77d9839"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""f6b4abcd-650c-47b8-befc-a587af2dd39a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""945817fe-89d4-4a15-8625-5360339a7f9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""cffcc4d6-6879-4b1a-b00c-4791648a695a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Primary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""226c77a1-1fc7-4cf4-841e-8a8bef0733d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""d5e7941b-89d1-4804-b3ef-1c664528dd96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""1f420e60-0ae4-435e-a1db-fe5b3d02d915"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""4746079b-64b1-4da5-841a-5ae38bc811a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisForce"",
                    ""type"": ""Button"",
                    ""id"": ""f9353602-6514-47ae-9b20-16dd6d9b690b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""79646e94-2acc-407b-a394-ad36050d569f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""6f7d00fb-3c28-463c-920d-5a420337801e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripPress"",
                    ""type"": ""Button"",
                    ""id"": ""f8cf2441-8529-4c89-a494-21acca5f108e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripForce"",
                    ""type"": ""Value"",
                    ""id"": ""56b8ccdc-cc3d-47e6-a2e9-a280ab7968b2"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""c7eaaa41-42fa-4525-a092-e04ed9bce153"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""1619eabf-9bd1-4da9-ac40-5821529863ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerTouch"",
                    ""type"": ""Button"",
                    ""id"": ""db45c109-74c7-42d3-af88-3811a3cc1c06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""2883de00-593e-4a22-9b0f-b0b57091fc1e"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""4007b67b-f70f-4bc7-9521-38ce08034aa6"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d96666f6-fa5e-4672-b971-fe7ee2f2391b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88e635b1-5dca-4c93-b473-6808611caa90"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c5c5b29d-14c7-4ac2-abf0-984f4e7f6cd9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a93dba0d-6192-4330-b4ca-94ffc1dd13ab"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""846eaf87-9a0d-4275-b842-481d5be05167"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a192580d-b98d-4636-92fb-a7511ba12806"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0f3e4ec1-3f79-435e-acbb-09c0fa0b0fc9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary2DAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3b4ef57f-7887-44a8-9d86-ff72c173b481"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d92c7b2b-530e-4cff-9d37-37561293a12a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e463508-1edd-490b-95af-683f5c959011"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RightHandDesktop"",
            ""id"": ""16c0d199-03fe-4963-8507-a381959e282c"",
            ""actions"": [
                {
                    ""name"": ""TriggerPress"",
                    ""type"": ""Button"",
                    ""id"": ""f5ea0d23-c8f0-4de3-b61e-2829f4a15e8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""b897a010-3651-4a34-9721-3f0992e87c14"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""6a04254d-d246-4a2d-a49e-38ae6dddca00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""a8ae20cc-665e-409c-ad31-a188c71343e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""b0fdaabf-3eac-4fcb-8c07-ed38606ce43d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""430d7fd0-5679-47a2-9cf8-d947dfb483ae"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Primary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""335a2fe6-0d20-415e-a6a9-f35c5e2b5e96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""7c7721d9-8c5c-408b-b694-acebf7cbd348"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxis"",
                    ""type"": ""Value"",
                    ""id"": ""12349f62-de23-4c98-94f6-7767efc8ab4f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary2DAxisClick"",
                    ""type"": ""Button"",
                    ""id"": ""cb19d750-2174-4ba3-b5c7-a962416fc73b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisForce"",
                    ""type"": ""Button"",
                    ""id"": ""5b8fe5a2-8034-4ca1-9f8d-99d2fa911802"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary2DAxisTouch"",
                    ""type"": ""Button"",
                    ""id"": ""c8271e2d-265a-4974-b1fe-81997c92e5c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""6729be79-33f1-444d-abd1-0c7fda056b0a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripPress"",
                    ""type"": ""Button"",
                    ""id"": ""bb1c86b7-6301-422e-b698-fe651db02f1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripForce"",
                    ""type"": ""Value"",
                    ""id"": ""0f0cc450-820f-4c4f-ba7d-702f60dda93e"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""e749cfdc-53e0-4c0d-b39d-cbe754d0e8ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""422a2181-e937-4630-befb-f1df2aaa75cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerTouch"",
                    ""type"": ""Button"",
                    ""id"": ""31c6140f-631e-4cd9-86e3-a9f31ee67966"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""f00b9eb0-4dd1-467a-b5a9-079aa754e253"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""59bb68e9-b60b-4e31-a01e-2e50f7727e7a"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""98736da7-968a-4cec-b399-c678fd0d514a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31a256d4-4b09-4890-9f71-cdf8b01a22e8"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfacbd48-442a-421f-bdac-654cd430412c"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e84d723a-dfd7-4652-9e81-323cb42899af"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73ccd3f2-76f8-4e4f-962b-03f1cd633190"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary2DAxisForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""XR Usage"",
            ""bindingGroup"": ""XR Usage"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // LeftHand
        m_LeftHand = asset.FindActionMap("LeftHand", throwIfNotFound: true);
        m_LeftHand_TriggerPress = m_LeftHand.FindAction("TriggerPress", throwIfNotFound: true);
        m_LeftHand_Trigger = m_LeftHand.FindAction("Trigger", throwIfNotFound: true);
        m_LeftHand_PrimaryButton = m_LeftHand.FindAction("PrimaryButton", throwIfNotFound: true);
        m_LeftHand_PrimaryTouch = m_LeftHand.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_LeftHand_Menu = m_LeftHand.FindAction("Menu", throwIfNotFound: true);
        m_LeftHand_Primary2DAxis = m_LeftHand.FindAction("Primary2DAxis", throwIfNotFound: true);
        m_LeftHand_Primary2DAxisClick = m_LeftHand.FindAction("Primary2DAxisClick", throwIfNotFound: true);
        m_LeftHand_Primary2DAxisTouch = m_LeftHand.FindAction("Primary2DAxisTouch", throwIfNotFound: true);
        m_LeftHand_Secondary2DAxis = m_LeftHand.FindAction("Secondary2DAxis", throwIfNotFound: true);
        m_LeftHand_Secondary2DAxisClick = m_LeftHand.FindAction("Secondary2DAxisClick", throwIfNotFound: true);
        m_LeftHand_Secondary2DAxisForce = m_LeftHand.FindAction("Secondary2DAxisForce", throwIfNotFound: true);
        m_LeftHand_Secondary2DAxisTouch = m_LeftHand.FindAction("Secondary2DAxisTouch", throwIfNotFound: true);
        m_LeftHand_Grip = m_LeftHand.FindAction("Grip", throwIfNotFound: true);
        m_LeftHand_GripPress = m_LeftHand.FindAction("GripPress", throwIfNotFound: true);
        m_LeftHand_GripForce = m_LeftHand.FindAction("GripForce", throwIfNotFound: true);
        m_LeftHand_SecondaryButton = m_LeftHand.FindAction("SecondaryButton", throwIfNotFound: true);
        m_LeftHand_SecondaryTouch = m_LeftHand.FindAction("SecondaryTouch", throwIfNotFound: true);
        m_LeftHand_TriggerTouch = m_LeftHand.FindAction("TriggerTouch", throwIfNotFound: true);
        m_LeftHand_ControllerPosition = m_LeftHand.FindAction("ControllerPosition", throwIfNotFound: true);
        m_LeftHand_ControllerRotation = m_LeftHand.FindAction("ControllerRotation", throwIfNotFound: true);
        m_LeftHand_Haptics = m_LeftHand.FindAction("Haptics", throwIfNotFound: true);
        // RightHand
        m_RightHand = asset.FindActionMap("RightHand", throwIfNotFound: true);
        m_RightHand_TriggerPress = m_RightHand.FindAction("TriggerPress", throwIfNotFound: true);
        m_RightHand_Trigger = m_RightHand.FindAction("Trigger", throwIfNotFound: true);
        m_RightHand_PrimaryButton = m_RightHand.FindAction("PrimaryButton", throwIfNotFound: true);
        m_RightHand_PrimaryTouch = m_RightHand.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_RightHand_Menu = m_RightHand.FindAction("Menu", throwIfNotFound: true);
        m_RightHand_Primary2DAxis = m_RightHand.FindAction("Primary2DAxis", throwIfNotFound: true);
        m_RightHand_Primary2DAxisClick = m_RightHand.FindAction("Primary2DAxisClick", throwIfNotFound: true);
        m_RightHand_Primary2DAxisTouch = m_RightHand.FindAction("Primary2DAxisTouch", throwIfNotFound: true);
        m_RightHand_Secondary2DAxis = m_RightHand.FindAction("Secondary2DAxis", throwIfNotFound: true);
        m_RightHand_Secondary2DAxisClick = m_RightHand.FindAction("Secondary2DAxisClick", throwIfNotFound: true);
        m_RightHand_Secondary2DAxisForce = m_RightHand.FindAction("Secondary2DAxisForce", throwIfNotFound: true);
        m_RightHand_Secondary2DAxisTouch = m_RightHand.FindAction("Secondary2DAxisTouch", throwIfNotFound: true);
        m_RightHand_Grip = m_RightHand.FindAction("Grip", throwIfNotFound: true);
        m_RightHand_GripPress = m_RightHand.FindAction("GripPress", throwIfNotFound: true);
        m_RightHand_GripForce = m_RightHand.FindAction("GripForce", throwIfNotFound: true);
        m_RightHand_SecondaryButton = m_RightHand.FindAction("SecondaryButton", throwIfNotFound: true);
        m_RightHand_SecondaryTouch = m_RightHand.FindAction("SecondaryTouch", throwIfNotFound: true);
        m_RightHand_TriggerTouch = m_RightHand.FindAction("TriggerTouch", throwIfNotFound: true);
        m_RightHand_ControllerPosition = m_RightHand.FindAction("ControllerPosition", throwIfNotFound: true);
        m_RightHand_ControllerRotation = m_RightHand.FindAction("ControllerRotation", throwIfNotFound: true);
        m_RightHand_Haptics = m_RightHand.FindAction("Haptics", throwIfNotFound: true);
        // HMD
        m_HMD = asset.FindActionMap("HMD", throwIfNotFound: true);
        m_HMD_hmdPosition = m_HMD.FindAction("hmdPosition", throwIfNotFound: true);
        m_HMD_hmdRotation = m_HMD.FindAction("hmdRotation", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_pointerPosition = m_UI.FindAction("pointerPosition", throwIfNotFound: true);
        m_UI_pointerRotation = m_UI.FindAction("pointerRotation", throwIfNotFound: true);
        // LeftHandDesktop
        m_LeftHandDesktop = asset.FindActionMap("LeftHandDesktop", throwIfNotFound: true);
        m_LeftHandDesktop_TriggerPress = m_LeftHandDesktop.FindAction("TriggerPress", throwIfNotFound: true);
        m_LeftHandDesktop_Trigger = m_LeftHandDesktop.FindAction("Trigger", throwIfNotFound: true);
        m_LeftHandDesktop_PrimaryButton = m_LeftHandDesktop.FindAction("PrimaryButton", throwIfNotFound: true);
        m_LeftHandDesktop_PrimaryTouch = m_LeftHandDesktop.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_LeftHandDesktop_Menu = m_LeftHandDesktop.FindAction("Menu", throwIfNotFound: true);
        m_LeftHandDesktop_Primary2DAxis = m_LeftHandDesktop.FindAction("Primary2DAxis", throwIfNotFound: true);
        m_LeftHandDesktop_Primary2DAxisClick = m_LeftHandDesktop.FindAction("Primary2DAxisClick", throwIfNotFound: true);
        m_LeftHandDesktop_Primary2DAxisTouch = m_LeftHandDesktop.FindAction("Primary2DAxisTouch", throwIfNotFound: true);
        m_LeftHandDesktop_Secondary2DAxis = m_LeftHandDesktop.FindAction("Secondary2DAxis", throwIfNotFound: true);
        m_LeftHandDesktop_Secondary2DAxisClick = m_LeftHandDesktop.FindAction("Secondary2DAxisClick", throwIfNotFound: true);
        m_LeftHandDesktop_Secondary2DAxisForce = m_LeftHandDesktop.FindAction("Secondary2DAxisForce", throwIfNotFound: true);
        m_LeftHandDesktop_Secondary2DAxisTouch = m_LeftHandDesktop.FindAction("Secondary2DAxisTouch", throwIfNotFound: true);
        m_LeftHandDesktop_Grip = m_LeftHandDesktop.FindAction("Grip", throwIfNotFound: true);
        m_LeftHandDesktop_GripPress = m_LeftHandDesktop.FindAction("GripPress", throwIfNotFound: true);
        m_LeftHandDesktop_GripForce = m_LeftHandDesktop.FindAction("GripForce", throwIfNotFound: true);
        m_LeftHandDesktop_SecondaryButton = m_LeftHandDesktop.FindAction("SecondaryButton", throwIfNotFound: true);
        m_LeftHandDesktop_SecondaryTouch = m_LeftHandDesktop.FindAction("SecondaryTouch", throwIfNotFound: true);
        m_LeftHandDesktop_TriggerTouch = m_LeftHandDesktop.FindAction("TriggerTouch", throwIfNotFound: true);
        m_LeftHandDesktop_ControllerPosition = m_LeftHandDesktop.FindAction("ControllerPosition", throwIfNotFound: true);
        m_LeftHandDesktop_ControllerRotation = m_LeftHandDesktop.FindAction("ControllerRotation", throwIfNotFound: true);
        // RightHandDesktop
        m_RightHandDesktop = asset.FindActionMap("RightHandDesktop", throwIfNotFound: true);
        m_RightHandDesktop_TriggerPress = m_RightHandDesktop.FindAction("TriggerPress", throwIfNotFound: true);
        m_RightHandDesktop_Trigger = m_RightHandDesktop.FindAction("Trigger", throwIfNotFound: true);
        m_RightHandDesktop_PrimaryButton = m_RightHandDesktop.FindAction("PrimaryButton", throwIfNotFound: true);
        m_RightHandDesktop_PrimaryTouch = m_RightHandDesktop.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_RightHandDesktop_Menu = m_RightHandDesktop.FindAction("Menu", throwIfNotFound: true);
        m_RightHandDesktop_Primary2DAxis = m_RightHandDesktop.FindAction("Primary2DAxis", throwIfNotFound: true);
        m_RightHandDesktop_Primary2DAxisClick = m_RightHandDesktop.FindAction("Primary2DAxisClick", throwIfNotFound: true);
        m_RightHandDesktop_Primary2DAxisTouch = m_RightHandDesktop.FindAction("Primary2DAxisTouch", throwIfNotFound: true);
        m_RightHandDesktop_Secondary2DAxis = m_RightHandDesktop.FindAction("Secondary2DAxis", throwIfNotFound: true);
        m_RightHandDesktop_Secondary2DAxisClick = m_RightHandDesktop.FindAction("Secondary2DAxisClick", throwIfNotFound: true);
        m_RightHandDesktop_Secondary2DAxisForce = m_RightHandDesktop.FindAction("Secondary2DAxisForce", throwIfNotFound: true);
        m_RightHandDesktop_Secondary2DAxisTouch = m_RightHandDesktop.FindAction("Secondary2DAxisTouch", throwIfNotFound: true);
        m_RightHandDesktop_Grip = m_RightHandDesktop.FindAction("Grip", throwIfNotFound: true);
        m_RightHandDesktop_GripPress = m_RightHandDesktop.FindAction("GripPress", throwIfNotFound: true);
        m_RightHandDesktop_GripForce = m_RightHandDesktop.FindAction("GripForce", throwIfNotFound: true);
        m_RightHandDesktop_SecondaryButton = m_RightHandDesktop.FindAction("SecondaryButton", throwIfNotFound: true);
        m_RightHandDesktop_SecondaryTouch = m_RightHandDesktop.FindAction("SecondaryTouch", throwIfNotFound: true);
        m_RightHandDesktop_TriggerTouch = m_RightHandDesktop.FindAction("TriggerTouch", throwIfNotFound: true);
        m_RightHandDesktop_ControllerPosition = m_RightHandDesktop.FindAction("ControllerPosition", throwIfNotFound: true);
        m_RightHandDesktop_ControllerRotation = m_RightHandDesktop.FindAction("ControllerRotation", throwIfNotFound: true);
    }

    ~@HVRInputActions()
    {
        UnityEngine.Debug.Assert(!m_LeftHand.enabled, "This will cause a leak and performance issues, HVRInputActions.LeftHand.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_RightHand.enabled, "This will cause a leak and performance issues, HVRInputActions.RightHand.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_HMD.enabled, "This will cause a leak and performance issues, HVRInputActions.HMD.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, HVRInputActions.UI.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_LeftHandDesktop.enabled, "This will cause a leak and performance issues, HVRInputActions.LeftHandDesktop.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_RightHandDesktop.enabled, "This will cause a leak and performance issues, HVRInputActions.RightHandDesktop.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // LeftHand
    private readonly InputActionMap m_LeftHand;
    private List<ILeftHandActions> m_LeftHandActionsCallbackInterfaces = new List<ILeftHandActions>();
    private readonly InputAction m_LeftHand_TriggerPress;
    private readonly InputAction m_LeftHand_Trigger;
    private readonly InputAction m_LeftHand_PrimaryButton;
    private readonly InputAction m_LeftHand_PrimaryTouch;
    private readonly InputAction m_LeftHand_Menu;
    private readonly InputAction m_LeftHand_Primary2DAxis;
    private readonly InputAction m_LeftHand_Primary2DAxisClick;
    private readonly InputAction m_LeftHand_Primary2DAxisTouch;
    private readonly InputAction m_LeftHand_Secondary2DAxis;
    private readonly InputAction m_LeftHand_Secondary2DAxisClick;
    private readonly InputAction m_LeftHand_Secondary2DAxisForce;
    private readonly InputAction m_LeftHand_Secondary2DAxisTouch;
    private readonly InputAction m_LeftHand_Grip;
    private readonly InputAction m_LeftHand_GripPress;
    private readonly InputAction m_LeftHand_GripForce;
    private readonly InputAction m_LeftHand_SecondaryButton;
    private readonly InputAction m_LeftHand_SecondaryTouch;
    private readonly InputAction m_LeftHand_TriggerTouch;
    private readonly InputAction m_LeftHand_ControllerPosition;
    private readonly InputAction m_LeftHand_ControllerRotation;
    private readonly InputAction m_LeftHand_Haptics;
    public struct LeftHandActions
    {
        private @HVRInputActions m_Wrapper;
        public LeftHandActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TriggerPress => m_Wrapper.m_LeftHand_TriggerPress;
        public InputAction @Trigger => m_Wrapper.m_LeftHand_Trigger;
        public InputAction @PrimaryButton => m_Wrapper.m_LeftHand_PrimaryButton;
        public InputAction @PrimaryTouch => m_Wrapper.m_LeftHand_PrimaryTouch;
        public InputAction @Menu => m_Wrapper.m_LeftHand_Menu;
        public InputAction @Primary2DAxis => m_Wrapper.m_LeftHand_Primary2DAxis;
        public InputAction @Primary2DAxisClick => m_Wrapper.m_LeftHand_Primary2DAxisClick;
        public InputAction @Primary2DAxisTouch => m_Wrapper.m_LeftHand_Primary2DAxisTouch;
        public InputAction @Secondary2DAxis => m_Wrapper.m_LeftHand_Secondary2DAxis;
        public InputAction @Secondary2DAxisClick => m_Wrapper.m_LeftHand_Secondary2DAxisClick;
        public InputAction @Secondary2DAxisForce => m_Wrapper.m_LeftHand_Secondary2DAxisForce;
        public InputAction @Secondary2DAxisTouch => m_Wrapper.m_LeftHand_Secondary2DAxisTouch;
        public InputAction @Grip => m_Wrapper.m_LeftHand_Grip;
        public InputAction @GripPress => m_Wrapper.m_LeftHand_GripPress;
        public InputAction @GripForce => m_Wrapper.m_LeftHand_GripForce;
        public InputAction @SecondaryButton => m_Wrapper.m_LeftHand_SecondaryButton;
        public InputAction @SecondaryTouch => m_Wrapper.m_LeftHand_SecondaryTouch;
        public InputAction @TriggerTouch => m_Wrapper.m_LeftHand_TriggerTouch;
        public InputAction @ControllerPosition => m_Wrapper.m_LeftHand_ControllerPosition;
        public InputAction @ControllerRotation => m_Wrapper.m_LeftHand_ControllerRotation;
        public InputAction @Haptics => m_Wrapper.m_LeftHand_Haptics;
        public InputActionMap Get() { return m_Wrapper.m_LeftHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftHandActions set) { return set.Get(); }
        public void AddCallbacks(ILeftHandActions instance)
        {
            if (instance == null || m_Wrapper.m_LeftHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LeftHandActionsCallbackInterfaces.Add(instance);
            @TriggerPress.started += instance.OnTriggerPress;
            @TriggerPress.performed += instance.OnTriggerPress;
            @TriggerPress.canceled += instance.OnTriggerPress;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @PrimaryButton.started += instance.OnPrimaryButton;
            @PrimaryButton.performed += instance.OnPrimaryButton;
            @PrimaryButton.canceled += instance.OnPrimaryButton;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Primary2DAxis.started += instance.OnPrimary2DAxis;
            @Primary2DAxis.performed += instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled += instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled += instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled += instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started += instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed += instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled += instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled += instance.OnSecondary2DAxisTouch;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @GripPress.started += instance.OnGripPress;
            @GripPress.performed += instance.OnGripPress;
            @GripPress.canceled += instance.OnGripPress;
            @GripForce.started += instance.OnGripForce;
            @GripForce.performed += instance.OnGripForce;
            @GripForce.canceled += instance.OnGripForce;
            @SecondaryButton.started += instance.OnSecondaryButton;
            @SecondaryButton.performed += instance.OnSecondaryButton;
            @SecondaryButton.canceled += instance.OnSecondaryButton;
            @SecondaryTouch.started += instance.OnSecondaryTouch;
            @SecondaryTouch.performed += instance.OnSecondaryTouch;
            @SecondaryTouch.canceled += instance.OnSecondaryTouch;
            @TriggerTouch.started += instance.OnTriggerTouch;
            @TriggerTouch.performed += instance.OnTriggerTouch;
            @TriggerTouch.canceled += instance.OnTriggerTouch;
            @ControllerPosition.started += instance.OnControllerPosition;
            @ControllerPosition.performed += instance.OnControllerPosition;
            @ControllerPosition.canceled += instance.OnControllerPosition;
            @ControllerRotation.started += instance.OnControllerRotation;
            @ControllerRotation.performed += instance.OnControllerRotation;
            @ControllerRotation.canceled += instance.OnControllerRotation;
            @Haptics.started += instance.OnHaptics;
            @Haptics.performed += instance.OnHaptics;
            @Haptics.canceled += instance.OnHaptics;
        }

        private void UnregisterCallbacks(ILeftHandActions instance)
        {
            @TriggerPress.started -= instance.OnTriggerPress;
            @TriggerPress.performed -= instance.OnTriggerPress;
            @TriggerPress.canceled -= instance.OnTriggerPress;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @PrimaryButton.started -= instance.OnPrimaryButton;
            @PrimaryButton.performed -= instance.OnPrimaryButton;
            @PrimaryButton.canceled -= instance.OnPrimaryButton;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Primary2DAxis.started -= instance.OnPrimary2DAxis;
            @Primary2DAxis.performed -= instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled -= instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled -= instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled -= instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled -= instance.OnSecondary2DAxisTouch;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @GripPress.started -= instance.OnGripPress;
            @GripPress.performed -= instance.OnGripPress;
            @GripPress.canceled -= instance.OnGripPress;
            @GripForce.started -= instance.OnGripForce;
            @GripForce.performed -= instance.OnGripForce;
            @GripForce.canceled -= instance.OnGripForce;
            @SecondaryButton.started -= instance.OnSecondaryButton;
            @SecondaryButton.performed -= instance.OnSecondaryButton;
            @SecondaryButton.canceled -= instance.OnSecondaryButton;
            @SecondaryTouch.started -= instance.OnSecondaryTouch;
            @SecondaryTouch.performed -= instance.OnSecondaryTouch;
            @SecondaryTouch.canceled -= instance.OnSecondaryTouch;
            @TriggerTouch.started -= instance.OnTriggerTouch;
            @TriggerTouch.performed -= instance.OnTriggerTouch;
            @TriggerTouch.canceled -= instance.OnTriggerTouch;
            @ControllerPosition.started -= instance.OnControllerPosition;
            @ControllerPosition.performed -= instance.OnControllerPosition;
            @ControllerPosition.canceled -= instance.OnControllerPosition;
            @ControllerRotation.started -= instance.OnControllerRotation;
            @ControllerRotation.performed -= instance.OnControllerRotation;
            @ControllerRotation.canceled -= instance.OnControllerRotation;
            @Haptics.started -= instance.OnHaptics;
            @Haptics.performed -= instance.OnHaptics;
            @Haptics.canceled -= instance.OnHaptics;
        }

        public void RemoveCallbacks(ILeftHandActions instance)
        {
            if (m_Wrapper.m_LeftHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILeftHandActions instance)
        {
            foreach (var item in m_Wrapper.m_LeftHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LeftHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LeftHandActions @LeftHand => new LeftHandActions(this);

    // RightHand
    private readonly InputActionMap m_RightHand;
    private List<IRightHandActions> m_RightHandActionsCallbackInterfaces = new List<IRightHandActions>();
    private readonly InputAction m_RightHand_TriggerPress;
    private readonly InputAction m_RightHand_Trigger;
    private readonly InputAction m_RightHand_PrimaryButton;
    private readonly InputAction m_RightHand_PrimaryTouch;
    private readonly InputAction m_RightHand_Menu;
    private readonly InputAction m_RightHand_Primary2DAxis;
    private readonly InputAction m_RightHand_Primary2DAxisClick;
    private readonly InputAction m_RightHand_Primary2DAxisTouch;
    private readonly InputAction m_RightHand_Secondary2DAxis;
    private readonly InputAction m_RightHand_Secondary2DAxisClick;
    private readonly InputAction m_RightHand_Secondary2DAxisForce;
    private readonly InputAction m_RightHand_Secondary2DAxisTouch;
    private readonly InputAction m_RightHand_Grip;
    private readonly InputAction m_RightHand_GripPress;
    private readonly InputAction m_RightHand_GripForce;
    private readonly InputAction m_RightHand_SecondaryButton;
    private readonly InputAction m_RightHand_SecondaryTouch;
    private readonly InputAction m_RightHand_TriggerTouch;
    private readonly InputAction m_RightHand_ControllerPosition;
    private readonly InputAction m_RightHand_ControllerRotation;
    private readonly InputAction m_RightHand_Haptics;
    public struct RightHandActions
    {
        private @HVRInputActions m_Wrapper;
        public RightHandActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TriggerPress => m_Wrapper.m_RightHand_TriggerPress;
        public InputAction @Trigger => m_Wrapper.m_RightHand_Trigger;
        public InputAction @PrimaryButton => m_Wrapper.m_RightHand_PrimaryButton;
        public InputAction @PrimaryTouch => m_Wrapper.m_RightHand_PrimaryTouch;
        public InputAction @Menu => m_Wrapper.m_RightHand_Menu;
        public InputAction @Primary2DAxis => m_Wrapper.m_RightHand_Primary2DAxis;
        public InputAction @Primary2DAxisClick => m_Wrapper.m_RightHand_Primary2DAxisClick;
        public InputAction @Primary2DAxisTouch => m_Wrapper.m_RightHand_Primary2DAxisTouch;
        public InputAction @Secondary2DAxis => m_Wrapper.m_RightHand_Secondary2DAxis;
        public InputAction @Secondary2DAxisClick => m_Wrapper.m_RightHand_Secondary2DAxisClick;
        public InputAction @Secondary2DAxisForce => m_Wrapper.m_RightHand_Secondary2DAxisForce;
        public InputAction @Secondary2DAxisTouch => m_Wrapper.m_RightHand_Secondary2DAxisTouch;
        public InputAction @Grip => m_Wrapper.m_RightHand_Grip;
        public InputAction @GripPress => m_Wrapper.m_RightHand_GripPress;
        public InputAction @GripForce => m_Wrapper.m_RightHand_GripForce;
        public InputAction @SecondaryButton => m_Wrapper.m_RightHand_SecondaryButton;
        public InputAction @SecondaryTouch => m_Wrapper.m_RightHand_SecondaryTouch;
        public InputAction @TriggerTouch => m_Wrapper.m_RightHand_TriggerTouch;
        public InputAction @ControllerPosition => m_Wrapper.m_RightHand_ControllerPosition;
        public InputAction @ControllerRotation => m_Wrapper.m_RightHand_ControllerRotation;
        public InputAction @Haptics => m_Wrapper.m_RightHand_Haptics;
        public InputActionMap Get() { return m_Wrapper.m_RightHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightHandActions set) { return set.Get(); }
        public void AddCallbacks(IRightHandActions instance)
        {
            if (instance == null || m_Wrapper.m_RightHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RightHandActionsCallbackInterfaces.Add(instance);
            @TriggerPress.started += instance.OnTriggerPress;
            @TriggerPress.performed += instance.OnTriggerPress;
            @TriggerPress.canceled += instance.OnTriggerPress;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @PrimaryButton.started += instance.OnPrimaryButton;
            @PrimaryButton.performed += instance.OnPrimaryButton;
            @PrimaryButton.canceled += instance.OnPrimaryButton;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Primary2DAxis.started += instance.OnPrimary2DAxis;
            @Primary2DAxis.performed += instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled += instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled += instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled += instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started += instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed += instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled += instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled += instance.OnSecondary2DAxisTouch;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @GripPress.started += instance.OnGripPress;
            @GripPress.performed += instance.OnGripPress;
            @GripPress.canceled += instance.OnGripPress;
            @GripForce.started += instance.OnGripForce;
            @GripForce.performed += instance.OnGripForce;
            @GripForce.canceled += instance.OnGripForce;
            @SecondaryButton.started += instance.OnSecondaryButton;
            @SecondaryButton.performed += instance.OnSecondaryButton;
            @SecondaryButton.canceled += instance.OnSecondaryButton;
            @SecondaryTouch.started += instance.OnSecondaryTouch;
            @SecondaryTouch.performed += instance.OnSecondaryTouch;
            @SecondaryTouch.canceled += instance.OnSecondaryTouch;
            @TriggerTouch.started += instance.OnTriggerTouch;
            @TriggerTouch.performed += instance.OnTriggerTouch;
            @TriggerTouch.canceled += instance.OnTriggerTouch;
            @ControllerPosition.started += instance.OnControllerPosition;
            @ControllerPosition.performed += instance.OnControllerPosition;
            @ControllerPosition.canceled += instance.OnControllerPosition;
            @ControllerRotation.started += instance.OnControllerRotation;
            @ControllerRotation.performed += instance.OnControllerRotation;
            @ControllerRotation.canceled += instance.OnControllerRotation;
            @Haptics.started += instance.OnHaptics;
            @Haptics.performed += instance.OnHaptics;
            @Haptics.canceled += instance.OnHaptics;
        }

        private void UnregisterCallbacks(IRightHandActions instance)
        {
            @TriggerPress.started -= instance.OnTriggerPress;
            @TriggerPress.performed -= instance.OnTriggerPress;
            @TriggerPress.canceled -= instance.OnTriggerPress;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @PrimaryButton.started -= instance.OnPrimaryButton;
            @PrimaryButton.performed -= instance.OnPrimaryButton;
            @PrimaryButton.canceled -= instance.OnPrimaryButton;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Primary2DAxis.started -= instance.OnPrimary2DAxis;
            @Primary2DAxis.performed -= instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled -= instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled -= instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled -= instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled -= instance.OnSecondary2DAxisTouch;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @GripPress.started -= instance.OnGripPress;
            @GripPress.performed -= instance.OnGripPress;
            @GripPress.canceled -= instance.OnGripPress;
            @GripForce.started -= instance.OnGripForce;
            @GripForce.performed -= instance.OnGripForce;
            @GripForce.canceled -= instance.OnGripForce;
            @SecondaryButton.started -= instance.OnSecondaryButton;
            @SecondaryButton.performed -= instance.OnSecondaryButton;
            @SecondaryButton.canceled -= instance.OnSecondaryButton;
            @SecondaryTouch.started -= instance.OnSecondaryTouch;
            @SecondaryTouch.performed -= instance.OnSecondaryTouch;
            @SecondaryTouch.canceled -= instance.OnSecondaryTouch;
            @TriggerTouch.started -= instance.OnTriggerTouch;
            @TriggerTouch.performed -= instance.OnTriggerTouch;
            @TriggerTouch.canceled -= instance.OnTriggerTouch;
            @ControllerPosition.started -= instance.OnControllerPosition;
            @ControllerPosition.performed -= instance.OnControllerPosition;
            @ControllerPosition.canceled -= instance.OnControllerPosition;
            @ControllerRotation.started -= instance.OnControllerRotation;
            @ControllerRotation.performed -= instance.OnControllerRotation;
            @ControllerRotation.canceled -= instance.OnControllerRotation;
            @Haptics.started -= instance.OnHaptics;
            @Haptics.performed -= instance.OnHaptics;
            @Haptics.canceled -= instance.OnHaptics;
        }

        public void RemoveCallbacks(IRightHandActions instance)
        {
            if (m_Wrapper.m_RightHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRightHandActions instance)
        {
            foreach (var item in m_Wrapper.m_RightHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RightHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RightHandActions @RightHand => new RightHandActions(this);

    // HMD
    private readonly InputActionMap m_HMD;
    private List<IHMDActions> m_HMDActionsCallbackInterfaces = new List<IHMDActions>();
    private readonly InputAction m_HMD_hmdPosition;
    private readonly InputAction m_HMD_hmdRotation;
    public struct HMDActions
    {
        private @HVRInputActions m_Wrapper;
        public HMDActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @hmdPosition => m_Wrapper.m_HMD_hmdPosition;
        public InputAction @hmdRotation => m_Wrapper.m_HMD_hmdRotation;
        public InputActionMap Get() { return m_Wrapper.m_HMD; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HMDActions set) { return set.Get(); }
        public void AddCallbacks(IHMDActions instance)
        {
            if (instance == null || m_Wrapper.m_HMDActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HMDActionsCallbackInterfaces.Add(instance);
            @hmdPosition.started += instance.OnHmdPosition;
            @hmdPosition.performed += instance.OnHmdPosition;
            @hmdPosition.canceled += instance.OnHmdPosition;
            @hmdRotation.started += instance.OnHmdRotation;
            @hmdRotation.performed += instance.OnHmdRotation;
            @hmdRotation.canceled += instance.OnHmdRotation;
        }

        private void UnregisterCallbacks(IHMDActions instance)
        {
            @hmdPosition.started -= instance.OnHmdPosition;
            @hmdPosition.performed -= instance.OnHmdPosition;
            @hmdPosition.canceled -= instance.OnHmdPosition;
            @hmdRotation.started -= instance.OnHmdRotation;
            @hmdRotation.performed -= instance.OnHmdRotation;
            @hmdRotation.canceled -= instance.OnHmdRotation;
        }

        public void RemoveCallbacks(IHMDActions instance)
        {
            if (m_Wrapper.m_HMDActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHMDActions instance)
        {
            foreach (var item in m_Wrapper.m_HMDActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HMDActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HMDActions @HMD => new HMDActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_pointerPosition;
    private readonly InputAction m_UI_pointerRotation;
    public struct UIActions
    {
        private @HVRInputActions m_Wrapper;
        public UIActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @pointerPosition => m_Wrapper.m_UI_pointerPosition;
        public InputAction @pointerRotation => m_Wrapper.m_UI_pointerRotation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @pointerPosition.started += instance.OnPointerPosition;
            @pointerPosition.performed += instance.OnPointerPosition;
            @pointerPosition.canceled += instance.OnPointerPosition;
            @pointerRotation.started += instance.OnPointerRotation;
            @pointerRotation.performed += instance.OnPointerRotation;
            @pointerRotation.canceled += instance.OnPointerRotation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @pointerPosition.started -= instance.OnPointerPosition;
            @pointerPosition.performed -= instance.OnPointerPosition;
            @pointerPosition.canceled -= instance.OnPointerPosition;
            @pointerRotation.started -= instance.OnPointerRotation;
            @pointerRotation.performed -= instance.OnPointerRotation;
            @pointerRotation.canceled -= instance.OnPointerRotation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // LeftHandDesktop
    private readonly InputActionMap m_LeftHandDesktop;
    private List<ILeftHandDesktopActions> m_LeftHandDesktopActionsCallbackInterfaces = new List<ILeftHandDesktopActions>();
    private readonly InputAction m_LeftHandDesktop_TriggerPress;
    private readonly InputAction m_LeftHandDesktop_Trigger;
    private readonly InputAction m_LeftHandDesktop_PrimaryButton;
    private readonly InputAction m_LeftHandDesktop_PrimaryTouch;
    private readonly InputAction m_LeftHandDesktop_Menu;
    private readonly InputAction m_LeftHandDesktop_Primary2DAxis;
    private readonly InputAction m_LeftHandDesktop_Primary2DAxisClick;
    private readonly InputAction m_LeftHandDesktop_Primary2DAxisTouch;
    private readonly InputAction m_LeftHandDesktop_Secondary2DAxis;
    private readonly InputAction m_LeftHandDesktop_Secondary2DAxisClick;
    private readonly InputAction m_LeftHandDesktop_Secondary2DAxisForce;
    private readonly InputAction m_LeftHandDesktop_Secondary2DAxisTouch;
    private readonly InputAction m_LeftHandDesktop_Grip;
    private readonly InputAction m_LeftHandDesktop_GripPress;
    private readonly InputAction m_LeftHandDesktop_GripForce;
    private readonly InputAction m_LeftHandDesktop_SecondaryButton;
    private readonly InputAction m_LeftHandDesktop_SecondaryTouch;
    private readonly InputAction m_LeftHandDesktop_TriggerTouch;
    private readonly InputAction m_LeftHandDesktop_ControllerPosition;
    private readonly InputAction m_LeftHandDesktop_ControllerRotation;
    public struct LeftHandDesktopActions
    {
        private @HVRInputActions m_Wrapper;
        public LeftHandDesktopActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TriggerPress => m_Wrapper.m_LeftHandDesktop_TriggerPress;
        public InputAction @Trigger => m_Wrapper.m_LeftHandDesktop_Trigger;
        public InputAction @PrimaryButton => m_Wrapper.m_LeftHandDesktop_PrimaryButton;
        public InputAction @PrimaryTouch => m_Wrapper.m_LeftHandDesktop_PrimaryTouch;
        public InputAction @Menu => m_Wrapper.m_LeftHandDesktop_Menu;
        public InputAction @Primary2DAxis => m_Wrapper.m_LeftHandDesktop_Primary2DAxis;
        public InputAction @Primary2DAxisClick => m_Wrapper.m_LeftHandDesktop_Primary2DAxisClick;
        public InputAction @Primary2DAxisTouch => m_Wrapper.m_LeftHandDesktop_Primary2DAxisTouch;
        public InputAction @Secondary2DAxis => m_Wrapper.m_LeftHandDesktop_Secondary2DAxis;
        public InputAction @Secondary2DAxisClick => m_Wrapper.m_LeftHandDesktop_Secondary2DAxisClick;
        public InputAction @Secondary2DAxisForce => m_Wrapper.m_LeftHandDesktop_Secondary2DAxisForce;
        public InputAction @Secondary2DAxisTouch => m_Wrapper.m_LeftHandDesktop_Secondary2DAxisTouch;
        public InputAction @Grip => m_Wrapper.m_LeftHandDesktop_Grip;
        public InputAction @GripPress => m_Wrapper.m_LeftHandDesktop_GripPress;
        public InputAction @GripForce => m_Wrapper.m_LeftHandDesktop_GripForce;
        public InputAction @SecondaryButton => m_Wrapper.m_LeftHandDesktop_SecondaryButton;
        public InputAction @SecondaryTouch => m_Wrapper.m_LeftHandDesktop_SecondaryTouch;
        public InputAction @TriggerTouch => m_Wrapper.m_LeftHandDesktop_TriggerTouch;
        public InputAction @ControllerPosition => m_Wrapper.m_LeftHandDesktop_ControllerPosition;
        public InputAction @ControllerRotation => m_Wrapper.m_LeftHandDesktop_ControllerRotation;
        public InputActionMap Get() { return m_Wrapper.m_LeftHandDesktop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftHandDesktopActions set) { return set.Get(); }
        public void AddCallbacks(ILeftHandDesktopActions instance)
        {
            if (instance == null || m_Wrapper.m_LeftHandDesktopActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LeftHandDesktopActionsCallbackInterfaces.Add(instance);
            @TriggerPress.started += instance.OnTriggerPress;
            @TriggerPress.performed += instance.OnTriggerPress;
            @TriggerPress.canceled += instance.OnTriggerPress;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @PrimaryButton.started += instance.OnPrimaryButton;
            @PrimaryButton.performed += instance.OnPrimaryButton;
            @PrimaryButton.canceled += instance.OnPrimaryButton;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Primary2DAxis.started += instance.OnPrimary2DAxis;
            @Primary2DAxis.performed += instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled += instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled += instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled += instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started += instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed += instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled += instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled += instance.OnSecondary2DAxisTouch;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @GripPress.started += instance.OnGripPress;
            @GripPress.performed += instance.OnGripPress;
            @GripPress.canceled += instance.OnGripPress;
            @GripForce.started += instance.OnGripForce;
            @GripForce.performed += instance.OnGripForce;
            @GripForce.canceled += instance.OnGripForce;
            @SecondaryButton.started += instance.OnSecondaryButton;
            @SecondaryButton.performed += instance.OnSecondaryButton;
            @SecondaryButton.canceled += instance.OnSecondaryButton;
            @SecondaryTouch.started += instance.OnSecondaryTouch;
            @SecondaryTouch.performed += instance.OnSecondaryTouch;
            @SecondaryTouch.canceled += instance.OnSecondaryTouch;
            @TriggerTouch.started += instance.OnTriggerTouch;
            @TriggerTouch.performed += instance.OnTriggerTouch;
            @TriggerTouch.canceled += instance.OnTriggerTouch;
            @ControllerPosition.started += instance.OnControllerPosition;
            @ControllerPosition.performed += instance.OnControllerPosition;
            @ControllerPosition.canceled += instance.OnControllerPosition;
            @ControllerRotation.started += instance.OnControllerRotation;
            @ControllerRotation.performed += instance.OnControllerRotation;
            @ControllerRotation.canceled += instance.OnControllerRotation;
        }

        private void UnregisterCallbacks(ILeftHandDesktopActions instance)
        {
            @TriggerPress.started -= instance.OnTriggerPress;
            @TriggerPress.performed -= instance.OnTriggerPress;
            @TriggerPress.canceled -= instance.OnTriggerPress;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @PrimaryButton.started -= instance.OnPrimaryButton;
            @PrimaryButton.performed -= instance.OnPrimaryButton;
            @PrimaryButton.canceled -= instance.OnPrimaryButton;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Primary2DAxis.started -= instance.OnPrimary2DAxis;
            @Primary2DAxis.performed -= instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled -= instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled -= instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled -= instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled -= instance.OnSecondary2DAxisTouch;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @GripPress.started -= instance.OnGripPress;
            @GripPress.performed -= instance.OnGripPress;
            @GripPress.canceled -= instance.OnGripPress;
            @GripForce.started -= instance.OnGripForce;
            @GripForce.performed -= instance.OnGripForce;
            @GripForce.canceled -= instance.OnGripForce;
            @SecondaryButton.started -= instance.OnSecondaryButton;
            @SecondaryButton.performed -= instance.OnSecondaryButton;
            @SecondaryButton.canceled -= instance.OnSecondaryButton;
            @SecondaryTouch.started -= instance.OnSecondaryTouch;
            @SecondaryTouch.performed -= instance.OnSecondaryTouch;
            @SecondaryTouch.canceled -= instance.OnSecondaryTouch;
            @TriggerTouch.started -= instance.OnTriggerTouch;
            @TriggerTouch.performed -= instance.OnTriggerTouch;
            @TriggerTouch.canceled -= instance.OnTriggerTouch;
            @ControllerPosition.started -= instance.OnControllerPosition;
            @ControllerPosition.performed -= instance.OnControllerPosition;
            @ControllerPosition.canceled -= instance.OnControllerPosition;
            @ControllerRotation.started -= instance.OnControllerRotation;
            @ControllerRotation.performed -= instance.OnControllerRotation;
            @ControllerRotation.canceled -= instance.OnControllerRotation;
        }

        public void RemoveCallbacks(ILeftHandDesktopActions instance)
        {
            if (m_Wrapper.m_LeftHandDesktopActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILeftHandDesktopActions instance)
        {
            foreach (var item in m_Wrapper.m_LeftHandDesktopActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LeftHandDesktopActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LeftHandDesktopActions @LeftHandDesktop => new LeftHandDesktopActions(this);

    // RightHandDesktop
    private readonly InputActionMap m_RightHandDesktop;
    private List<IRightHandDesktopActions> m_RightHandDesktopActionsCallbackInterfaces = new List<IRightHandDesktopActions>();
    private readonly InputAction m_RightHandDesktop_TriggerPress;
    private readonly InputAction m_RightHandDesktop_Trigger;
    private readonly InputAction m_RightHandDesktop_PrimaryButton;
    private readonly InputAction m_RightHandDesktop_PrimaryTouch;
    private readonly InputAction m_RightHandDesktop_Menu;
    private readonly InputAction m_RightHandDesktop_Primary2DAxis;
    private readonly InputAction m_RightHandDesktop_Primary2DAxisClick;
    private readonly InputAction m_RightHandDesktop_Primary2DAxisTouch;
    private readonly InputAction m_RightHandDesktop_Secondary2DAxis;
    private readonly InputAction m_RightHandDesktop_Secondary2DAxisClick;
    private readonly InputAction m_RightHandDesktop_Secondary2DAxisForce;
    private readonly InputAction m_RightHandDesktop_Secondary2DAxisTouch;
    private readonly InputAction m_RightHandDesktop_Grip;
    private readonly InputAction m_RightHandDesktop_GripPress;
    private readonly InputAction m_RightHandDesktop_GripForce;
    private readonly InputAction m_RightHandDesktop_SecondaryButton;
    private readonly InputAction m_RightHandDesktop_SecondaryTouch;
    private readonly InputAction m_RightHandDesktop_TriggerTouch;
    private readonly InputAction m_RightHandDesktop_ControllerPosition;
    private readonly InputAction m_RightHandDesktop_ControllerRotation;
    public struct RightHandDesktopActions
    {
        private @HVRInputActions m_Wrapper;
        public RightHandDesktopActions(@HVRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TriggerPress => m_Wrapper.m_RightHandDesktop_TriggerPress;
        public InputAction @Trigger => m_Wrapper.m_RightHandDesktop_Trigger;
        public InputAction @PrimaryButton => m_Wrapper.m_RightHandDesktop_PrimaryButton;
        public InputAction @PrimaryTouch => m_Wrapper.m_RightHandDesktop_PrimaryTouch;
        public InputAction @Menu => m_Wrapper.m_RightHandDesktop_Menu;
        public InputAction @Primary2DAxis => m_Wrapper.m_RightHandDesktop_Primary2DAxis;
        public InputAction @Primary2DAxisClick => m_Wrapper.m_RightHandDesktop_Primary2DAxisClick;
        public InputAction @Primary2DAxisTouch => m_Wrapper.m_RightHandDesktop_Primary2DAxisTouch;
        public InputAction @Secondary2DAxis => m_Wrapper.m_RightHandDesktop_Secondary2DAxis;
        public InputAction @Secondary2DAxisClick => m_Wrapper.m_RightHandDesktop_Secondary2DAxisClick;
        public InputAction @Secondary2DAxisForce => m_Wrapper.m_RightHandDesktop_Secondary2DAxisForce;
        public InputAction @Secondary2DAxisTouch => m_Wrapper.m_RightHandDesktop_Secondary2DAxisTouch;
        public InputAction @Grip => m_Wrapper.m_RightHandDesktop_Grip;
        public InputAction @GripPress => m_Wrapper.m_RightHandDesktop_GripPress;
        public InputAction @GripForce => m_Wrapper.m_RightHandDesktop_GripForce;
        public InputAction @SecondaryButton => m_Wrapper.m_RightHandDesktop_SecondaryButton;
        public InputAction @SecondaryTouch => m_Wrapper.m_RightHandDesktop_SecondaryTouch;
        public InputAction @TriggerTouch => m_Wrapper.m_RightHandDesktop_TriggerTouch;
        public InputAction @ControllerPosition => m_Wrapper.m_RightHandDesktop_ControllerPosition;
        public InputAction @ControllerRotation => m_Wrapper.m_RightHandDesktop_ControllerRotation;
        public InputActionMap Get() { return m_Wrapper.m_RightHandDesktop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightHandDesktopActions set) { return set.Get(); }
        public void AddCallbacks(IRightHandDesktopActions instance)
        {
            if (instance == null || m_Wrapper.m_RightHandDesktopActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RightHandDesktopActionsCallbackInterfaces.Add(instance);
            @TriggerPress.started += instance.OnTriggerPress;
            @TriggerPress.performed += instance.OnTriggerPress;
            @TriggerPress.canceled += instance.OnTriggerPress;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @PrimaryButton.started += instance.OnPrimaryButton;
            @PrimaryButton.performed += instance.OnPrimaryButton;
            @PrimaryButton.canceled += instance.OnPrimaryButton;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Primary2DAxis.started += instance.OnPrimary2DAxis;
            @Primary2DAxis.performed += instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled += instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled += instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled += instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started += instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed += instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled += instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled += instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled += instance.OnSecondary2DAxisTouch;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @GripPress.started += instance.OnGripPress;
            @GripPress.performed += instance.OnGripPress;
            @GripPress.canceled += instance.OnGripPress;
            @GripForce.started += instance.OnGripForce;
            @GripForce.performed += instance.OnGripForce;
            @GripForce.canceled += instance.OnGripForce;
            @SecondaryButton.started += instance.OnSecondaryButton;
            @SecondaryButton.performed += instance.OnSecondaryButton;
            @SecondaryButton.canceled += instance.OnSecondaryButton;
            @SecondaryTouch.started += instance.OnSecondaryTouch;
            @SecondaryTouch.performed += instance.OnSecondaryTouch;
            @SecondaryTouch.canceled += instance.OnSecondaryTouch;
            @TriggerTouch.started += instance.OnTriggerTouch;
            @TriggerTouch.performed += instance.OnTriggerTouch;
            @TriggerTouch.canceled += instance.OnTriggerTouch;
            @ControllerPosition.started += instance.OnControllerPosition;
            @ControllerPosition.performed += instance.OnControllerPosition;
            @ControllerPosition.canceled += instance.OnControllerPosition;
            @ControllerRotation.started += instance.OnControllerRotation;
            @ControllerRotation.performed += instance.OnControllerRotation;
            @ControllerRotation.canceled += instance.OnControllerRotation;
        }

        private void UnregisterCallbacks(IRightHandDesktopActions instance)
        {
            @TriggerPress.started -= instance.OnTriggerPress;
            @TriggerPress.performed -= instance.OnTriggerPress;
            @TriggerPress.canceled -= instance.OnTriggerPress;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @PrimaryButton.started -= instance.OnPrimaryButton;
            @PrimaryButton.performed -= instance.OnPrimaryButton;
            @PrimaryButton.canceled -= instance.OnPrimaryButton;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Primary2DAxis.started -= instance.OnPrimary2DAxis;
            @Primary2DAxis.performed -= instance.OnPrimary2DAxis;
            @Primary2DAxis.canceled -= instance.OnPrimary2DAxis;
            @Primary2DAxisClick.started -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisTouch.started -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled -= instance.OnPrimary2DAxisTouch;
            @Secondary2DAxis.started -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.performed -= instance.OnSecondary2DAxis;
            @Secondary2DAxis.canceled -= instance.OnSecondary2DAxis;
            @Secondary2DAxisClick.started -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisForce.started -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.performed -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisForce.canceled -= instance.OnSecondary2DAxisForce;
            @Secondary2DAxisTouch.started -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled -= instance.OnSecondary2DAxisTouch;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @GripPress.started -= instance.OnGripPress;
            @GripPress.performed -= instance.OnGripPress;
            @GripPress.canceled -= instance.OnGripPress;
            @GripForce.started -= instance.OnGripForce;
            @GripForce.performed -= instance.OnGripForce;
            @GripForce.canceled -= instance.OnGripForce;
            @SecondaryButton.started -= instance.OnSecondaryButton;
            @SecondaryButton.performed -= instance.OnSecondaryButton;
            @SecondaryButton.canceled -= instance.OnSecondaryButton;
            @SecondaryTouch.started -= instance.OnSecondaryTouch;
            @SecondaryTouch.performed -= instance.OnSecondaryTouch;
            @SecondaryTouch.canceled -= instance.OnSecondaryTouch;
            @TriggerTouch.started -= instance.OnTriggerTouch;
            @TriggerTouch.performed -= instance.OnTriggerTouch;
            @TriggerTouch.canceled -= instance.OnTriggerTouch;
            @ControllerPosition.started -= instance.OnControllerPosition;
            @ControllerPosition.performed -= instance.OnControllerPosition;
            @ControllerPosition.canceled -= instance.OnControllerPosition;
            @ControllerRotation.started -= instance.OnControllerRotation;
            @ControllerRotation.performed -= instance.OnControllerRotation;
            @ControllerRotation.canceled -= instance.OnControllerRotation;
        }

        public void RemoveCallbacks(IRightHandDesktopActions instance)
        {
            if (m_Wrapper.m_RightHandDesktopActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRightHandDesktopActions instance)
        {
            foreach (var item in m_Wrapper.m_RightHandDesktopActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RightHandDesktopActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RightHandDesktopActions @RightHandDesktop => new RightHandDesktopActions(this);
    private int m_XRUsageSchemeIndex = -1;
    public InputControlScheme XRUsageScheme
    {
        get
        {
            if (m_XRUsageSchemeIndex == -1) m_XRUsageSchemeIndex = asset.FindControlSchemeIndex("XR Usage");
            return asset.controlSchemes[m_XRUsageSchemeIndex];
        }
    }
    public interface ILeftHandActions
    {
        void OnTriggerPress(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnPrimaryButton(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnPrimary2DAxis(InputAction.CallbackContext context);
        void OnPrimary2DAxisClick(InputAction.CallbackContext context);
        void OnPrimary2DAxisTouch(InputAction.CallbackContext context);
        void OnSecondary2DAxis(InputAction.CallbackContext context);
        void OnSecondary2DAxisClick(InputAction.CallbackContext context);
        void OnSecondary2DAxisForce(InputAction.CallbackContext context);
        void OnSecondary2DAxisTouch(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripPress(InputAction.CallbackContext context);
        void OnGripForce(InputAction.CallbackContext context);
        void OnSecondaryButton(InputAction.CallbackContext context);
        void OnSecondaryTouch(InputAction.CallbackContext context);
        void OnTriggerTouch(InputAction.CallbackContext context);
        void OnControllerPosition(InputAction.CallbackContext context);
        void OnControllerRotation(InputAction.CallbackContext context);
        void OnHaptics(InputAction.CallbackContext context);
    }
    public interface IRightHandActions
    {
        void OnTriggerPress(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnPrimaryButton(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnPrimary2DAxis(InputAction.CallbackContext context);
        void OnPrimary2DAxisClick(InputAction.CallbackContext context);
        void OnPrimary2DAxisTouch(InputAction.CallbackContext context);
        void OnSecondary2DAxis(InputAction.CallbackContext context);
        void OnSecondary2DAxisClick(InputAction.CallbackContext context);
        void OnSecondary2DAxisForce(InputAction.CallbackContext context);
        void OnSecondary2DAxisTouch(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripPress(InputAction.CallbackContext context);
        void OnGripForce(InputAction.CallbackContext context);
        void OnSecondaryButton(InputAction.CallbackContext context);
        void OnSecondaryTouch(InputAction.CallbackContext context);
        void OnTriggerTouch(InputAction.CallbackContext context);
        void OnControllerPosition(InputAction.CallbackContext context);
        void OnControllerRotation(InputAction.CallbackContext context);
        void OnHaptics(InputAction.CallbackContext context);
    }
    public interface IHMDActions
    {
        void OnHmdPosition(InputAction.CallbackContext context);
        void OnHmdRotation(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnClick(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnPointerRotation(InputAction.CallbackContext context);
    }
    public interface ILeftHandDesktopActions
    {
        void OnTriggerPress(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnPrimaryButton(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnPrimary2DAxis(InputAction.CallbackContext context);
        void OnPrimary2DAxisClick(InputAction.CallbackContext context);
        void OnPrimary2DAxisTouch(InputAction.CallbackContext context);
        void OnSecondary2DAxis(InputAction.CallbackContext context);
        void OnSecondary2DAxisClick(InputAction.CallbackContext context);
        void OnSecondary2DAxisForce(InputAction.CallbackContext context);
        void OnSecondary2DAxisTouch(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripPress(InputAction.CallbackContext context);
        void OnGripForce(InputAction.CallbackContext context);
        void OnSecondaryButton(InputAction.CallbackContext context);
        void OnSecondaryTouch(InputAction.CallbackContext context);
        void OnTriggerTouch(InputAction.CallbackContext context);
        void OnControllerPosition(InputAction.CallbackContext context);
        void OnControllerRotation(InputAction.CallbackContext context);
    }
    public interface IRightHandDesktopActions
    {
        void OnTriggerPress(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnPrimaryButton(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnPrimary2DAxis(InputAction.CallbackContext context);
        void OnPrimary2DAxisClick(InputAction.CallbackContext context);
        void OnPrimary2DAxisTouch(InputAction.CallbackContext context);
        void OnSecondary2DAxis(InputAction.CallbackContext context);
        void OnSecondary2DAxisClick(InputAction.CallbackContext context);
        void OnSecondary2DAxisForce(InputAction.CallbackContext context);
        void OnSecondary2DAxisTouch(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripPress(InputAction.CallbackContext context);
        void OnGripForce(InputAction.CallbackContext context);
        void OnSecondaryButton(InputAction.CallbackContext context);
        void OnSecondaryTouch(InputAction.CallbackContext context);
        void OnTriggerTouch(InputAction.CallbackContext context);
        void OnControllerPosition(InputAction.CallbackContext context);
        void OnControllerRotation(InputAction.CallbackContext context);
    }
}
